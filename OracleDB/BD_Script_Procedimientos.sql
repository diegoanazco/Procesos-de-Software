
CREATE OR REPLACE PROCEDURE LOGIN(PV1 IN VARCHAR2, PV2 IN VARCHAR2, PS1 OUT NUMBER)AS
V_USUARIO NUMBER;
BEGIN
  SELECT ID INTO V_USUARIO FROM ADMINISTRADOR WHERE USUARIO = PV1 AND CONTRASE헤 = PV2;
  PS1 := V_USUARIO;

  EXCEPTION
  WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('ERROR');
END;

INSERT INTO ADMINISTRADOR(USUARIO,CONTRASE헤) VALUES ('LFLORESR','admin');

SELECT *FROM ADMINISTRADOR;




SET SERVEROUTPUT ON
DECLARE 
  VIN1 VARCHAR2(50); 
  VIN2 VARCHAR2(50); 
  VOUT NUMBER;
BEGIN
  VIN1 := 'MPINTOG';
  VIN2 := 'admin';
  PR_LOGIN(VIN1,VIN2,VOUT);
  DBMS_OUTPUT.PUT_LINE(VOUT);
END;

SELECT *FROM ADMINISTRADOR;


-------------------------------------------------------------------------------
/*SIDU PARA TABLA ADMINISTRADORES*/
-------------------------------------------------------------------------------

/*PROCEDIMIENTO PARA INSERTAR NUEVO ADMINISTRADOR*/
CREATE OR REPLACE PROCEDURE NEW_ADMIN(PV1 IN VARCHAR, PV2 IN VARCHAR) AS 
BEGIN
  INSERT INTO ADMINISTRADOR (USUARIO,CONTRASE헤) VALUES (PV1,PV2);
    EXCEPTION
  WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('ERROR');

END;

/*PROCEDIMIENTO PARA ELIMINAR UN ADMINISTRADOR*/
CREATE OR REPLACE PROCEDURE DROP_ADMIN(PV1 IN VARCHAR) AS 
BEGIN
  DELETE FROM ADMINISTRADOR WHERE USUARIO = PV1;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('ERROR');

END;

/*PROCEDIMIENTO PARA ACTUALIZAR UN ADMINISTRADOR*/
CREATE OR REPLACE PROCEDURE UPDATE_ADMIN(PV1 IN VARCHAR, PV2 IN VARCHAR) AS
BEGIN
  UPDATE ADMINISTRADOR SET CONTRASE헤 = PV2 WHERE USUARIO = PV1;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('ERROR');

END;

-------------------------------------------------------------------------------
/*SIDU PARA TABLA CLIENTES 
NOTA: 
  1) ID - NOMBRE PAISES*/
-------------------------------------------------------------------------------
/*SENTENCIA PARA VER LISTADO DE CLIENTES*/

SELECT C.IDCLIENTE,C.NOMCLIENTE,C.DIRCLIENTE,P.NOMBREPAIS,C.FONOCLIENTE,C.LINEACREDI
FROM CLIENTES C INNER JOIN PAISES P ON C.IDPAIS = P.IDPAIS;

SELECT *FROM CLIENTES;

/*PROCEDIMIENTO PARA INSERTAR NUEVO CLIENTE*/
CREATE OR REPLACE PROCEDURE CLIENTES_NEW(PV1 IN VARCHAR,PV2 IN VARCHAR, PV3 IN VARCHAR, PV4 IN VARCHAR, PV5 IN VARCHAR, PV6 IN NUMBER) AS
BEGIN
  INSERT INTO CLIENTES (IDCLIENTE,NOMCLIENTE,DIRCLIENTE,IDPAIS,FONOCLIENTE,LINEACREDI) VALUES (PV1,PV2,PV3,PV4,PV5,PV6);
    EXCEPTION
  WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('ERROR');

END;
  
SELECT *FROM CLIENTES;
DELETE FROM CLIENTES WHERE IDCLIENTE = 'DONBO';


/*PROCEDIMIENTO PARA ELIMINAR UN CLIENTE*/
CREATE OR REPLACE PROCEDURE CLIENTES_DROP(PV1 IN VARCHAR) AS 
BEGIN
  DELETE FROM CLIENTES WHERE IDCLIENTE = PV1;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('ERROR');

END;

/*SENTENCIA PARA BUSCAR UN CLIENTE*/
SELECT *FROM CLIENTES WHERE NOMCLIENTE = 'Diego Joseph Anazco Bolivar';

/*PROCEDIMIENTO PARA ACTUALIZAR UN LINEA DE CREDITO DEL CLIENTE*/
CREATE OR REPLACE PROCEDURE CLIENTES_UPDATE_LINCREDI (PV1 IN VARCHAR, PV2 IN NUMBER) AS
BEGIN 
  UPDATE CLIENTES SET LINEACREDI = PV2 WHERE IDCLIENTE = PV1;
    EXCEPTION
  WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('ERROR');

END;


  
  
-------------------------------------------------------------------------------
/*SIDU PARA TABLA EMPLEADOS*/
-------------------------------------------------------------------------------
/*SENTENCIA PARA VER TODOS LOS DISTRITOS*/
SELECT *FROM DISTRITOS;

/*SENTENCIA PARA VER TODOS LOS CARGOS*/
SELECT *FROM CARGOS;


/*SENTENCIA PARA VER TODOS LOS EMPLEADOS*/
SELECT E.IDEMPLEADO,E.APEEMPLEADO,E.NOMEMPLEADO,E.FECNAC,E.DIREEMPLEADO,E.IDDISTRITO,D.NOMDISTRITO,E.FONOEMPLEADO,E.IDCARGO,C.DESCARGO,E.FECCONTRATA,E.SALARY
FROM EMPLEADOS E INNER JOIN DISTRITOS D ON D.IDDISTRITO = E.IDDISTRITO INNER JOIN CARGOS C ON C.IDCARGO = E.IDCARGO;


/**/


SELECT *FROM EMPLEADOS;
DESCRIBE EMPLEADOS;
-------------------------------------------------------------------------------
/*SIDU PARA TABLA PRODUCTOS*/
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
/*SIDU PARA TABLA PROVEEDORES*/
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
/*SIDU PARA TABLA PEDIDOSCABECERA*/
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
/*SIDU PARA TABLA PEDIDOSDETALLE*/
-------------------------------------------------------------------------------







